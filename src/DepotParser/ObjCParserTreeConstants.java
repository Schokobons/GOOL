package DepotParser;
/* Generated By:JavaCC: Do not edit this line. ObjCParserTreeConstants.java Version 5.0 */

public interface ObjCParserTreeConstants
{
  public int JJTTRANSLATIONUNIT = 0;
  public int JJTEXTERNALDECLARATION = 1;
  public int JJTSTRIPPEDPARENS = 2;
  public int JJTFUNCTIONDEFINITION = 3;
  public int JJTDECLARATION = 4;
  public int JJTCLASSINTERFACE = 5;
  public int JJTCLASSIMPLEMENTATION = 6;
  public int JJTCATEGORYINTERFACE = 7;
  public int JJTCATEGORYIMPLEMENTATION = 8;
  public int JJTPROTOCOLDECLARATION = 9;
  public int JJTCLASSDECLARATIONLIST = 10;
  public int JJTCLASSLIST = 11;
  public int JJTPROTOCOLREFERENCELIST = 12;
  public int JJTPROTOCOLLIST = 13;
  public int JJTOBJCIDENT = 14;
  public int JJTCLASSNAME = 15;
  public int JJTSUPERCLASSNAME = 16;
  public int JJTCOLONSUPERCLASSNAME = 17;
  public int JJTCATEGORYNAME = 18;
  public int JJTPROTOCOLNAME = 19;
  public int JJTINSTANCEVARIABLES = 20;
  public int JJTINSTANCEVARIABLEDECLARATION = 21;
  public int JJTINSTANCEVARIABLEDECLARATOR = 22;
  public int JJTVISIBILITYSPECIFICATION = 23;
  public int JJTIBOUTLET = 24;
  public int JJTPROTOCOLINTERFACEDECLARATION = 25;
  public int JJTQUALIFIEDPROTOCOLINTERFACEDECLARATION = 26;
  public int JJTINTERFACEDECLARATION = 27;
  public int JJTPROPERTYDECLARATION = 28;
  public int JJTPROPERTYATTRIBUTESDECLARATION = 29;
  public int JJTPROPERTYATTRIBUTESLIST = 30;
  public int JJTPROPERTYATTRIBUTE = 31;
  public int JJTMETHODDECLARATION = 32;
  public int JJTCLASSMETHODDECLARATION = 33;
  public int JJTINSTANCEMETHODDECLARATION = 34;
  public int JJTIMPLEMENTATIONDEFINITION = 35;
  public int JJTPROPERTYIMPLEMENTATION = 36;
  public int JJTPROPERTYSYNTHESIZELIST = 37;
  public int JJTPROPERTYSYNTHESIZEITEM = 38;
  public int JJTMETHODDEFINITION = 39;
  public int JJTCLASSMETHODDEFINITION = 40;
  public int JJTINSTANCEMETHODDEFINITION = 41;
  public int JJTMETHODSELECTORNOLIST = 42;
  public int JJTMETHODSELECTOR = 43;
  public int JJTUNARYSELECTOR = 44;
  public int JJTKEYWORDSELECTOR = 45;
  public int JJTKEYWORDDECLARATOR = 46;
  public int JJTSELECTOR = 47;
  public int JJTMETHODTYPE = 48;
  public int JJTSELECTOREXPRESSION = 49;
  public int JJTSELECTORNAME = 50;
  public int JJTKEYWORDNAME = 51;
  public int JJTPROTOCOLEXPRESSION = 52;
  public int JJTENCODEEXPRESSION = 53;
  public int JJTDECLARATIONLIST = 54;
  public int JJTDECLARATIONSPECIFIERS = 55;
  public int JJTSTORAGECLASSSPECIFIER = 56;
  public int JJTTYPESPECIFIER = 57;
  public int JJTGREEDYFIXEDNUMTYPE = 58;
  public int JJTPOSSIBLECOCOATYPE = 59;
  public int JJTPOSSIBLECORETYPE = 60;
  public int JJTPOSSIBLEUNKNOWNTYPE = 61;
  public int JJTTYPESPECIFIERWITHUNKNOWNTYPE = 62;
  public int JJTTYPEQUALIFIER = 63;
  public int JJTSTRUCTORUNIONSPECIFIER = 64;
  public int JJTSTRUCTORUNION = 65;
  public int JJTSTRUCTDECLARATIONLIST = 66;
  public int JJTINITDECLARATORLIST = 67;
  public int JJTINITDECLARATOR = 68;
  public int JJTPROTOCOLQUALIFIER = 69;
  public int JJTIN = 70;
  public int JJTSTRUCTDECLARATION = 71;
  public int JJTSPECIFIERQUALIFIERWITHUNKNOWNTYPE = 72;
  public int JJTSPECIFIERQUALIFIERLIST = 73;
  public int JJTSTRUCTDECLARATORLIST = 74;
  public int JJTSTRUCTDECLARATOR = 75;
  public int JJTENUMSPECIFIER = 76;
  public int JJTENUMERATORLIST = 77;
  public int JJTENUMERATOR = 78;
  public int JJTDECLARATOR = 79;
  public int JJTBLOCK = 80;
  public int JJTDIRECTDECLARATOR = 81;
  public int JJTPOINTER = 82;
  public int JJTTYPEQUALIFIERLIST = 83;
  public int JJTPARAMETERTYPELIST = 84;
  public int JJTPARAMETERLIST = 85;
  public int JJTPARAMETERDECLARATION = 86;
  public int JJTIDENTIFIERLIST = 87;
  public int JJTINITIALIZER = 88;
  public int JJTINITIALIZERLIST = 89;
  public int JJTTYPENAME = 90;
  public int JJTTYPENAMEWITHUNKNOWNTYPE = 91;
  public int JJTABSTRACTDECLARATOR = 92;
  public int JJTDIRECTABSTRACTDECLARATOR = 93;
  public int JJTTYPEDEFNAME = 94;
  public int JJTSTATEMENT = 95;
  public int JJTLABELEDSTATEMENT = 96;
  public int JJTINITSTATEMENT = 97;
  public int JJTEXPRESSIONSTATEMENT = 98;
  public int JJTCOMPOUNDSTATEMENT = 99;
  public int JJTSTATEMENTLIST = 100;
  public int JJTSELECTIONSTATEMENT = 101;
  public int JJTNESTEDLOGICALEXPRESSION = 102;
  public int JJTLOGICALOPERATOR = 103;
  public int JJTITERATIONSTATEMENT = 104;
  public int JJTNUMBERTYPEINIT = 105;
  public int JJTJUMPSTATEMENT = 106;
  public int JJTEXPRESSION = 107;
  public int JJTASSIGNMENTEXPRESSION = 108;
  public int JJTASSIGNMENTOPERATOR = 109;
  public int JJTCONDITIONALEXPRESSION = 110;
  public int JJTCONSTANTEXPRESSION = 111;
  public int JJTLOGICALOREXPRESSION = 112;
  public int JJTLOGICALANDEXPRESSION = 113;
  public int JJTINCLUSIVEOREXPRESSION = 114;
  public int JJTEXCLUSIVEOREXPRESSION = 115;
  public int JJTANDEXPRESSION = 116;
  public int JJTEQUALITYEXPRESSION = 117;
  public int JJTRELATIONALEXPRESSION = 118;
  public int JJTSHIFTEXPRESSION = 119;
  public int JJTADDITIVEEXPRESSION = 120;
  public int JJTMULTIPLICATIVEEXPRESSION = 121;
  public int JJTCASTEXPRESSION = 122;
  public int JJTUNARYEXPRESSION = 123;
  public int JJTUNARYOPERATOR = 124;
  public int JJTPOSTFIXEXPRESSION = 125;
  public int JJTPRIMARYEXPRESSION = 126;
  public int JJTMESSAGEEXPRESSION = 127;
  public int JJTRECEIVER = 128;
  public int JJTTYPEDEFEDIDENT = 129;
  public int JJTMESSAGESELECTOR = 130;
  public int JJTKEYWORDARGUMENT = 131;
  public int JJTARGUMENTEXPRESSIONLIST = 132;
  public int JJTCONSTANT = 133;


  public String[] jjtNodeName = {
    "TranslationUnit",
    "ExternalDeclaration",
    "StrippedParens",
    "FunctionDefinition",
    "Declaration",
    "ClassInterface",
    "ClassImplementation",
    "CategoryInterface",
    "CategoryImplementation",
    "ProtocolDeclaration",
    "ClassDeclarationList",
    "ClassList",
    "ProtocolReferenceList",
    "ProtocolList",
    "ObjCIDENT",
    "ClassName",
    "SuperClassName",
    "ColonSuperClassName",
    "CategoryName",
    "ProtocolName",
    "InstanceVariables",
    "InstanceVariableDeclaration",
    "InstanceVariableDeclarator",
    "VisibilitySpecification",
    "IBOutlet",
    "ProtocolInterfaceDeclaration",
    "QualifiedProtocolInterfaceDeclaration",
    "InterfaceDeclaration",
    "PropertyDeclaration",
    "PropertyAttributesDeclaration",
    "PropertyAttributesList",
    "PropertyAttribute",
    "MethodDeclaration",
    "ClassMethodDeclaration",
    "InstanceMethodDeclaration",
    "ImplementationDefinition",
    "PropertyImplementation",
    "PropertySynthesizeList",
    "PropertySynthesizeItem",
    "MethodDefinition",
    "ClassMethodDefinition",
    "InstanceMethodDefinition",
    "MethodSelectorNoList",
    "MethodSelector",
    "UnarySelector",
    "KeywordSelector",
    "KeywordDeclarator",
    "Selector",
    "MethodType",
    "SelectorExpression",
    "SelectorName",
    "KeywordName",
    "ProtocolExpression",
    "EncodeExpression",
    "DeclarationList",
    "DeclarationSpecifiers",
    "StorageClassSpecifier",
    "TypeSpecifier",
    "GreedyFixedNumType",
    "PossibleCocoaType",
    "PossibleCoreType",
    "PossibleUnknownType",
    "TypeSpecifierWithUnknownType",
    "TypeQualifier",
    "StructOrUnionSpecifier",
    "StructOrUnion",
    "StructDeclarationList",
    "InitDeclaratorList",
    "InitDeclarator",
    "ProtocolQualifier",
    "In",
    "StructDeclaration",
    "SpecifierQualifierWithUnknownType",
    "SpecifierQualifierList",
    "StructDeclaratorList",
    "StructDeclarator",
    "EnumSpecifier",
    "EnumeratorList",
    "Enumerator",
    "Declarator",
    "Block",
    "DirectDeclarator",
    "Pointer",
    "TypeQualifierList",
    "ParameterTypeList",
    "ParameterList",
    "ParameterDeclaration",
    "IdentifierList",
    "Initializer",
    "InitializerList",
    "TypeName",
    "TypeNameWithUnknownType",
    "AbstractDeclarator",
    "DirectAbstractDeclarator",
    "TypedefName",
    "Statement",
    "LabeledStatement",
    "InitStatement",
    "ExpressionStatement",
    "CompoundStatement",
    "StatementList",
    "SelectionStatement",
    "NestedLogicalExpression",
    "LogicalOperator",
    "IterationStatement",
    "NumberTypeInit",
    "JumpStatement",
    "Expression",
    "AssignmentExpression",
    "AssignmentOperator",
    "ConditionalExpression",
    "ConstantExpression",
    "LogicalORExpression",
    "LogicalANDExpression",
    "InclusiveORExpression",
    "ExclusiveORExpression",
    "ANDExpression",
    "EqualityExpression",
    "RelationalExpression",
    "ShiftExpression",
    "AdditiveExpression",
    "MultiplicativeExpression",
    "CastExpression",
    "UnaryExpression",
    "UnaryOperator",
    "PostfixExpression",
    "PrimaryExpression",
    "MessageExpression",
    "Receiver",
    "TypeDefedIDENT",
    "MessageSelector",
    "KeywordArgument",
    "ArgumentExpressionList",
    "Constant",
  };
}
/* JavaCC - OriginalChecksum=56f7c44b05c0bf3eb2cf02ffe32d21fd (do not edit this line) */
